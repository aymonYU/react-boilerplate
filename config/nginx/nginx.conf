# based on https://github.com/h5bp/server-configs-nginx/blob/master/nginx.conf
# and https://www.digitalocean.com/community/tutorials/how-to-optimize-nginx-configuration

# Sets the worker threads to the number of CPU cores available in the system for best performance.
# Should be > the number of CPU cores.
# Maximum number of connections = worker_processes * worker_connections
worker_processes auto;

# Maximum number of open files per worker process.
# Should be > worker_connections.
worker_rlimit_nofile 8192;

events {
  # If you need more connections than this, you start optimizing your OS.
  # That's probably the point at which you hire people who are smarter than you as this is *a lot* of requests.
  # Should be < worker_rlimit_nofile.
  worker_connections 8000;
}

# The file storing the process ID of the main process
pid        /var/run/nginx.pid;

http {

    # Hide nginx version information.
    server_tokens off;

    include           /etc/nginx/mime.types;
    default_type      application/octet-stream;

    # Update charset_types to match updated mime.types.
    # text/html is always included by charset module.
    charset_types text/css text/plain text/vnd.wap.wml application/javascript application/json application/rss+xml application/xml;

    # Include $http_x_forwarded_for within default format used in log files
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    # How long to allow each connection to stay idle.
    # Longer values are better for each individual client, particularly for SSL,
    # but means that worker connections are tied up longer.
    keepalive_timeout 65s;

    # Speed up file transfers by using sendfile() to copy directly
    # between descriptors rather than using read()/write().
    # For performance reasons, on FreeBSD systems w/ ZFS
    # this option should be disabled as ZFS's ARC caches
    # frequently used files in RAM by default.
    sendfile        on;

    # Don't send out partial frames; this increases throughput
    # since TCP frames are filled up before being sent out.
    tcp_nopush      on;


    # Gzip Settings
    gzip              on;
    gzip_http_version 1.1;
    gzip_proxied      any;
    gzip_min_length   256;
    gzip_disable      "MSIE [1-6]\.";
    gzip_comp_level   7;
    gzip_types          application/atom+xml
                        application/javascript
                        application/json
                        application/ld+json
                        application/manifest+json
                        application/rss+xml
                        application/vnd.geo+json
                        application/vnd.ms-fontobject
                        application/x-font-ttf
                        application/x-web-app-manifest+json
                        application/xhtml+xml
                        application/xml
                        font/opentype
                        image/bmp
                        image/svg+xml
                        image/x-icon
                        text/cache-manifest
                        text/css
                        text/plain
                        text/vcard
                        text/vnd.rim.location.xloc
                        text/vtt
                        text/x-component
                        text/x-cross-domain-policy;
                        # text/html is always compressed by gzip module

    # This should be turned on if you are going to have pre-compressed copies (.gz) of
    # static files available. If not it should be left off as it will cause extra I/O
    # for the check. It is best if you enable this in a location{} block for
    # a specific directory, or on an individual server{} level.
    # gzip_static on;

    ##
    # Logging Settings
    ##

    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    ##
    # Configuration for the server
    ##
    server {

        # Running port
        listen        80;
        server_name   localhost;
        charset       utf-8;

        root          /usr/share/nginx/html;

        # Proxying the connections connections
        location / {
            try_files $uri $uri/ /index.html;
        }

        #TODO: add Expiry headers later
        # location ~* .(jpg|jpeg|png|gif|ico|css|js)$ {
        #   expires 365d;
        # }
    }
}
